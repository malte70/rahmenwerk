<?php
/**
 * Application class
 * stores information and launches the actual controllers
 *
 * @author Malte Bublitz
 */

namespace rahmenwerk;

class Application {
	/**
	 * content type
	 * @param string
	 */
	private $content_type = "text/html";

	/**
	 * encoding
	 */
	private $encoding = "utf-8";

	/**
	 * application name
	 * @param string
	 */
	private $appname = "";

	/**
	 * Site name
	 * @param string
	 */
	private $site_name = "";

	/**
	 * Base URL
	 * @param string
	 */
	private $baseurl = "http://example.com";

	/**
	 * database object
	 * @param mysqli object
	 */
	public $db;

	/**
	 * URL elements
	 * @param array
	 */
	public $url_elements = array();

	/**
	 * Controller
	 * @param object
	 */
	private $controller;

	/**
	 * Data generated by the controller
	 * @param array
	 */

	public function setAppName($appname) {
		$this->appname = $appname;
	}
	public function getAppName() {
		return $this->appname;
	}
	public function setSiteName($sitename) {
		$this->site_name = $sitename;
	}
	public function getSiteName() {
		return $this->site_name;
	}
	public function setBaseURL($baseurl) {
		$this->baseurl = $baseurl;
	}
	public function getBaseURL() {
		return $this->baseurl;
	}
	public function getViewData() {
		return $this->data;
	}
	public function getIsError() {
		return $this->data["isError"];
	}
	public function getErrorCode() {
		return $this->data["errorCode"];
	}
	/**
	 * determine controller to use
	 */
	private function getControllerName() {
		switch (@$this->url_elements[0]) {
			case "":
				$cname = "Default";
				break;
			case "robots.txt":
			case "humans.txt":
				$cname = "Staticfile";
				break;
			default:
				$cname = "404";
		}
		return $cname."Controller";
	}
	/**
	 * run the application
	 */
	public function run() {
		/**
		 * split path, and make path safe.
		 */
		if (isset($_SERVER["PATH_INFO"])) {
			$this->url_elements = explode("/", trim($_SERVER["PATH_INFO"], "/"));
			for ($i = 0; $i<count($this->url_elements); $i++) {
				if ($this->url_elements[$i]=="..")
					$this->url_elements[$i] = "";
			}
		}
		
		/**
		 * determine controller to run
		 */
		$controller_name = $this->getControllerName();
		$this->controller = new $controller_name($this);
		
		$this->controller->main();
		$this->data = array_merge(
			$this->controller->data,
			array(
				"encoding" => $this->encoding,
				"content_type" => $this->content_type,
				"appname" => $this->appname,
				"site_name" => $this->site_name,
				"baseurl" => $this->baseurl
			)
		);
	}
}

?>
